#N canvas 169 22 886 674 10;
#N canvas 0 22 450 278 (subpatch) 0;
#X array array1 12 float 2;
#X coords 0 1 12 -1 160 100 1 0 0;
#X restore 19 203 graph;
#X msg 23 325 bang;
#X obj 24 91 loadbang;
#X msg 24 113 resize 9;
#X obj 24 135 s array1;
#X msg 22 383 bang;
#X floatatom 22 427 5 0 0 0 - - -, f 5;
#X text 54 383 check the size of the array;
#X text 80 114 initialize an array with 9 elements;
#X text 54 324 create guard points;
#X obj 20 599 tabread array1;
#X floatatom 20 621 5 0 0 0 - - -, f 5;
#X obj 119 599 tabread array1;
#X floatatom 119 621 5 0 0 0 - - -, f 5;
#X msg 20 498 1;
#X msg 50 498 2;
#X msg 80 498 9;
#X obj 119 538 sel 1 2 9;
#X msg 119 560 10;
#X msg 146 560 11;
#X msg 172 561 0;
#X text 18 450 now compare element 1 with element 10 \, element 2 with
element 11 \, and element 9 with element zero. their values are the
same;
#X obj 19 16 cnv 15 400 40 empty empty empty 20 12 0 14 -191765 -66577
0;
#X text 17 169 draw some values in the array with the mouse;
#X obj 435 483 guard_points;
#X obj 23 347 guard_points array1;
#X text 433 94 Inlets:;
#X text 489 111 left: bang (it will produce the guard points);
#N canvas 0 22 450 278 (subpatch) 0;
#X array array2 4099 float 2;
#X coords 0 1 4099 -1 160 100 1 0 0;
#X restore 435 340 graph;
#X obj 437 225 loadbang;
#X obj 437 269 s array2;
#X text 512 247 it works fine with larger arrays too;
#X msg 437 247 resize 4096;
#X text 434 308 draw values;
#X msg 435 460 bang;
#X msg 504 460 array2;
#X text 546 461 set array name and create guard points;
#X floatatom 433 647 5 0 0 0 - - -, f 5;
#X floatatom 532 647 5 0 0 0 - - -, f 5;
#X msg 433 524 1;
#X msg 463 524 2;
#X msg 599 586 0;
#X msg 532 586 4097;
#X msg 566 586 4098;
#X msg 493 524 4096;
#X obj 433 625 tabread array2;
#X obj 532 625 tabread array2;
#X obj 532 564 sel 1 2 4096;
#X text 31 21 [guard_points] is an abstraction that creates three guard
points in a table for cubic interpolation;
#X text 492 129 right: message with the name of the array \, if no
argument is provided or if you want to override an already provided
argument;
#X text 431 26 Arguments:;
#X text 499 26 array name (optional \, if no argument is provided you
should specify the array name by sending a message to the right inlet)
;
#X msg 632 311 bang;
#X floatatom 632 355 5 0 0 0 - - -, f 5;
#X text 664 311 check the size of the array;
#X obj 22 405 array size array1;
#X obj 632 333 array size array2;
#X connect 1 0 25 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 55 0;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 17 0;
#X connect 14 0 10 0;
#X connect 15 0 17 0;
#X connect 15 0 10 0;
#X connect 16 0 17 0;
#X connect 16 0 10 0;
#X connect 17 0 18 0;
#X connect 17 1 19 0;
#X connect 17 2 20 0;
#X connect 18 0 12 0;
#X connect 19 0 12 0;
#X connect 20 0 12 0;
#X connect 29 0 32 0;
#X connect 32 0 30 0;
#X connect 34 0 24 0;
#X connect 35 0 24 1;
#X connect 39 0 45 0;
#X connect 39 0 47 0;
#X connect 40 0 45 0;
#X connect 40 0 47 0;
#X connect 41 0 46 0;
#X connect 42 0 46 0;
#X connect 43 0 46 0;
#X connect 44 0 45 0;
#X connect 44 0 47 0;
#X connect 45 0 37 0;
#X connect 46 0 38 0;
#X connect 47 0 42 0;
#X connect 47 1 43 0;
#X connect 47 2 41 0;
#X connect 52 0 56 0;
#X connect 55 0 6 0;
#X connect 56 0 53 0;
