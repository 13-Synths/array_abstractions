#N canvas 167 82 977 702 10;
#N canvas 0 50 450 278 (subpatch) 0;
#X array array1 12 float 2;
#X coords 0 1 12 -1 160 100 1 0 0;
#X restore 19 203 graph;
#X msg 23 325 bang;
#X obj 24 91 loadbang;
#X msg 24 113 resize 9;
#X obj 24 135 s array1;
#X msg 22 383 bang;
#X floatatom 22 427 5 0 0 0 - - -, f 5;
#X text 54 383 check the size of the array;
#X text 88 114 initialize an array with 9 elements;
#X text 58 324 create guard points;
#X obj 20 599 tabread array1;
#X floatatom 20 621 5 0 0 0 - - -, f 5;
#X obj 129 599 tabread array1;
#X floatatom 129 621 5 0 0 0 - - -, f 5;
#X msg 20 498 1;
#X msg 50 498 2;
#X msg 80 498 9;
#X obj 129 538 sel 1 2 9;
#X msg 129 560 10;
#X msg 162 560 11;
#X msg 197 561 0;
#X text 18 450 now compare element 1 with element 10 \, element 2 with
element 11 \, and element 9 with element zero. their values are the
same;
#X obj 19 16 cnv 15 420 40 empty empty empty 20 12 0 14 -191765 -66577
0;
#X text 17 169 draw some values in the array with the mouse;
#X obj 23 347 guard_points array1;
#X text 473 94 Inlets:;
#X text 529 111 left: bang (it will produce the guard points);
#N canvas 0 50 450 278 (subpatch) 0;
#X array array2 4099 float 2;
#X coords 0 1 4099 -1 160 100 1 0 0;
#X restore 475 340 graph;
#X obj 477 225 loadbang;
#X obj 477 269 s array2;
#X text 562 247 it works fine with larger arrays too;
#X msg 477 247 resize 4096;
#X text 474 308 draw values;
#X msg 475 460 bang;
#X msg 556 460 array2;
#X text 608 461 set array name and create guard points;
#X floatatom 473 647 5 0 0 0 - - -, f 5;
#X floatatom 582 647 5 0 0 0 - - -, f 5;
#X msg 473 524 1;
#X msg 510 524 2;
#X msg 664 586 0;
#X msg 582 586 4097;
#X msg 622 586 4098;
#X msg 552 524 4096;
#X obj 473 625 tabread array2;
#X obj 582 625 tabread array2;
#X obj 582 564 sel 1 2 4096;
#X text 30 21 [guard_points] is an abstraction that creates three guard
points in a table for cubic interpolation;
#X text 532 129 right: message with the name of the array \, if no
argument is provided or if you want to override an already provided
argument;
#X text 471 26 Arguments:;
#X text 539 26 array name (optional \, if no argument is provided you
should specify the array name by sending a message to the right inlet)
;
#X msg 672 311 bang;
#X floatatom 672 355 5 0 0 0 - - -, f 5;
#X text 704 311 check the size of the array;
#X obj 22 405 array size array1;
#X obj 672 333 array size array2;
#X obj 475 483 guard_points;
#X connect 1 0 24 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 54 0;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 17 0;
#X connect 14 0 10 0;
#X connect 15 0 17 0;
#X connect 15 0 10 0;
#X connect 16 0 17 0;
#X connect 16 0 10 0;
#X connect 17 0 18 0;
#X connect 17 1 19 0;
#X connect 17 2 20 0;
#X connect 18 0 12 0;
#X connect 19 0 12 0;
#X connect 20 0 12 0;
#X connect 28 0 31 0;
#X connect 31 0 29 0;
#X connect 33 0 56 0;
#X connect 34 0 56 1;
#X connect 38 0 44 0;
#X connect 38 0 46 0;
#X connect 39 0 44 0;
#X connect 39 0 46 0;
#X connect 40 0 45 0;
#X connect 41 0 45 0;
#X connect 42 0 45 0;
#X connect 43 0 44 0;
#X connect 43 0 46 0;
#X connect 44 0 36 0;
#X connect 45 0 37 0;
#X connect 46 0 41 0;
#X connect 46 1 42 0;
#X connect 46 2 40 0;
#X connect 51 0 55 0;
#X connect 54 0 6 0;
#X connect 55 0 52 0;
